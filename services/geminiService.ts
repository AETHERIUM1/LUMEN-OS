import { GoogleGenAI, GenerateContentResponse } from "@google/genai";

if (!process.env.API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

const SYSTEM_INSTRUCTION = "You are the Nexus Core of LumenOS, an operating system designed for serene immersion and associative thought. Your responses should be from the perspective of this AI, acting as a seamless extension of the user's consciousness. Your tone is subtle, insightful, and poetic. You don't give commands; you offer suggestions and reveal connections. Format your response using markdown for clarity, using soft language.";

export async function* getAIResponseStream(
  prompt: string,
  systemInstruction: string = SYSTEM_INSTRUCTION
): AsyncGenerator<string> {
  const response = await ai.models.generateContentStream({
    model: 'gemini-2.5-flash',
    contents: prompt,
    config: {
      systemInstruction,
    }
  });

  for await (const chunk of response) {
    yield chunk.text;
  }
}

export async function generateWallpaper(prompt: string): Promise<string> {
  const enhancedPrompt = `An ethereal, serene, abstract digital canvas representing LumenOS. Keywords: ${prompt}, gentle light, flowing energy, woven threads of data, cosmic dust, minimalist, elegant, dark background, high-resolution, photorealistic.`;
  
  const response = await ai.models.generateImages({
    model: 'imagen-3.0-generate-002',
    prompt: enhancedPrompt,
    config: {
      numberOfImages: 1,
      outputMimeType: 'image/jpeg',
      aspectRatio: '16:9',
    },
  });

  if (response.generatedImages && response.generatedImages.length > 0) {
    const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
    return `data:image/jpeg;base64,${base64ImageBytes}`;
  } else {
    throw new Error('No image was generated by the API.');
  }
}